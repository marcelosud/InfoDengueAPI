// <auto-generated />
using System;
using InfoDengueAPI.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InfoDengueAPI.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InfoDengueAPI.Domain.Entities.DadoEpidemiologico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Casos")
                        .HasColumnType("int");

                    b.Property<int?>("CasosConf")
                        .HasColumnType("int");

                    b.Property<double>("CasosEst")
                        .HasColumnType("float");

                    b.Property<int>("CasosEstMax")
                        .HasColumnType("int");

                    b.Property<int>("CasosEstMin")
                        .HasColumnType("int");

                    b.Property<int>("CasosProv")
                        .HasColumnType("int");

                    b.Property<int?>("CasosProvEst")
                        .HasColumnType("int");

                    b.Property<int?>("CasosProvEstMax")
                        .HasColumnType("int");

                    b.Property<int?>("CasosProvEstMin")
                        .HasColumnType("int");

                    b.Property<long>("DataInicioSE")
                        .HasColumnType("bigint");

                    b.Property<int>("LocalidadeId")
                        .HasColumnType("int");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<int>("NivelInc")
                        .HasColumnType("int");

                    b.Property<int>("NotifAccumYear")
                        .HasColumnType("int");

                    b.Property<double>("Pinc100k")
                        .HasColumnType("float");

                    b.Property<double>("Populacao")
                        .HasColumnType("float");

                    b.Property<double>("Prt1")
                        .HasColumnType("float");

                    b.Property<int>("Receptivo")
                        .HasColumnType("int");

                    b.Property<int>("RelatorioId")
                        .HasColumnType("int");

                    b.Property<double?>("Rt")
                        .HasColumnType("float");

                    b.Property<int>("SE")
                        .HasColumnType("int");

                    b.Property<double>("TempMax")
                        .HasColumnType("float");

                    b.Property<double>("TempMed")
                        .HasColumnType("float");

                    b.Property<double>("TempMin")
                        .HasColumnType("float");

                    b.Property<int>("Transmissao")
                        .HasColumnType("int");

                    b.Property<double>("UmidMax")
                        .HasColumnType("float");

                    b.Property<double>("UmidMed")
                        .HasColumnType("float");

                    b.Property<double>("UmidMin")
                        .HasColumnType("float");

                    b.Property<string>("VersaoModelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RelatorioId");

                    b.ToTable("DadosEpidemiologicos");
                });

            modelBuilder.Entity("InfoDengueAPI.Domain.Entities.Relatorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Arbovirose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodigoIBGE")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataSolicitacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemanaFim")
                        .HasColumnType("int");

                    b.Property<int>("SemanaInicio")
                        .HasColumnType("int");

                    b.Property<int>("SolicitanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SolicitanteId");

                    b.ToTable("Relatorios");
                });

            modelBuilder.Entity("InfoDengueAPI.Domain.Entities.Solicitante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Solicitantes");
                });

            modelBuilder.Entity("InfoDengueAPI.Domain.Entities.DadoEpidemiologico", b =>
                {
                    b.HasOne("InfoDengueAPI.Domain.Entities.Relatorio", "Relatorio")
                        .WithMany("DadosEpidemiologicos")
                        .HasForeignKey("RelatorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Relatorio");
                });

            modelBuilder.Entity("InfoDengueAPI.Domain.Entities.Relatorio", b =>
                {
                    b.HasOne("InfoDengueAPI.Domain.Entities.Solicitante", "Solicitante")
                        .WithMany("Relatorios")
                        .HasForeignKey("SolicitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solicitante");
                });

            modelBuilder.Entity("InfoDengueAPI.Domain.Entities.Relatorio", b =>
                {
                    b.Navigation("DadosEpidemiologicos");
                });

            modelBuilder.Entity("InfoDengueAPI.Domain.Entities.Solicitante", b =>
                {
                    b.Navigation("Relatorios");
                });
#pragma warning restore 612, 618
        }
    }
}
